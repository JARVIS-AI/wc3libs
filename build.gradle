plugins {
    id "java"
    id "antlr"
    id "jacoco"
    id "idea"
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

// Project Info
group 'net.moonlightflower'
version '1.1.2'

repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    antlr "org.antlr:antlr4:4.7"

    // Logging
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    // Libs
    implementation group: 'com.github.inwc3', name: 'jmpq3', version: '1.7.14'
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
    implementation group: 'com.dorkbox', name: 'PeParser', version: '2.13'
    implementation group: 'com.dorkbox', name: 'PeParser-Dorkbox-Util', version: '2.7'
    implementation group: 'com.twelvemonkeys.imageio', name: 'imageio-jpeg', version: '3.4.1'
    implementation 'com.jcraft:jzlib:1.1.3'

    // TestNG
    testImplementation 'org.testng:testng:6.14.3'
}

test {
    useTestNG()
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives sourcesJar
}

task cleanAntlrDir {
    delete "${buildDir}/generated-src/"
    delete fileTree("src/main/java/net/moonlightflower/wc3libs/antlr").include('*.*')
}

generateGrammarSource { doLast {
    println "Copying generated grammar lexer/parser files to main directory."

    copy {
        from "${buildDir}/generated-src/antlr/main"
        into "src/main/java/net/moonlightflower/wc3libs/antlr"
    }
    project.delete fileTree("${buildDir}/generated-src/antlr/main").include('*.*')
}}


generateGrammarSource.dependsOn cleanAntlrDir
compileJava.dependsOn generateGrammarSource
